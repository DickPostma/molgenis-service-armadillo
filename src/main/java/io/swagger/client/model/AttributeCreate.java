/*
 * Metadata API
 * RESTful API to create/read/update/delete metadata.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * AttributeCreate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-14T15:06:09.233Z[GMT]")
public class AttributeCreate {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BOOL("bool"),
    CATEGORICAL("categorical"),
    CATEGORICAL_MREF("categorical_mref"),
    COMPOUND("compound"),
    DATE("date"),
    DATE_TIME("date_time"),
    DECIMAL("decimal"),
    EMAIL("email"),
    ENUM("enum"),
    FILE("file"),
    HTML("html"),
    HYPERLINK("hyperlink"),
    INT("int"),
    LONG("long"),
    MREF("mref"),
    ONE_TO_MANY("one_to_many"),
    SCRIPT("script"),
    STRING("string"),
    TEXT("text"),
    XREF("xref");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("parent")
  private String parent = null;

  @SerializedName("refEntityType")
  private String refEntityType = null;

  @SerializedName("cascadeDelete")
  private Boolean cascadeDelete = null;

  @SerializedName("mappedByAttribute")
  private String mappedByAttribute = null;

  @SerializedName("orderBy")
  private List<List> orderBy = null;

  @SerializedName("expression")
  private String expression = null;

  @SerializedName("nullable")
  private Boolean nullable = null;

  @SerializedName("auto")
  private Boolean auto = null;

  @SerializedName("visible")
  private Boolean visible = null;

  @SerializedName("label")
  private I18nValue label = null;

  @SerializedName("description")
  private I18nValue description = null;

  @SerializedName("aggregatable")
  private Boolean aggregatable = null;

  @SerializedName("enumOptions")
  private List<String> enumOptions = null;

  @SerializedName("range")
  private Range range = null;

  @SerializedName("readonly")
  private Boolean readonly = null;

  @SerializedName("unique")
  private Boolean unique = null;

  @SerializedName("nullableExpression")
  private String nullableExpression = null;

  @SerializedName("visibleExpression")
  private String visibleExpression = null;

  @SerializedName("validationExpression")
  private String validationExpression = null;

  @SerializedName("defaultValue")
  private String defaultValue = null;

  @SerializedName("sequenceNumber")
  private Integer sequenceNumber = null;

  @SerializedName("idAttribute")
  private Boolean idAttribute = null;

  @SerializedName("labelAttribute")
  private Boolean labelAttribute = null;

  @SerializedName("lookupAttributeIndex")
  private Integer lookupAttributeIndex = null;

  public AttributeCreate id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AttributeCreate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AttributeCreate type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AttributeCreate parent(String parent) {
    this.parent = parent;
    return this;
  }

   /**
   * the id of the parent attribute
   * @return parent
  **/
  @Schema(description = "the id of the parent attribute")
  public String getParent() {
    return parent;
  }

  public void setParent(String parent) {
    this.parent = parent;
  }

  public AttributeCreate refEntityType(String refEntityType) {
    this.refEntityType = refEntityType;
    return this;
  }

   /**
   * Get refEntityType
   * @return refEntityType
  **/
  @Schema(description = "")
  public String getRefEntityType() {
    return refEntityType;
  }

  public void setRefEntityType(String refEntityType) {
    this.refEntityType = refEntityType;
  }

  public AttributeCreate cascadeDelete(Boolean cascadeDelete) {
    this.cascadeDelete = cascadeDelete;
    return this;
  }

   /**
   * Get cascadeDelete
   * @return cascadeDelete
  **/
  @Schema(description = "")
  public Boolean isCascadeDelete() {
    return cascadeDelete;
  }

  public void setCascadeDelete(Boolean cascadeDelete) {
    this.cascadeDelete = cascadeDelete;
  }

  public AttributeCreate mappedByAttribute(String mappedByAttribute) {
    this.mappedByAttribute = mappedByAttribute;
    return this;
  }

   /**
   * the id of the &#x27;mapped by&#x27; attribute
   * @return mappedByAttribute
  **/
  @Schema(description = "the id of the 'mapped by' attribute")
  public String getMappedByAttribute() {
    return mappedByAttribute;
  }

  public void setMappedByAttribute(String mappedByAttribute) {
    this.mappedByAttribute = mappedByAttribute;
  }

  public AttributeCreate orderBy(List<List> orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  public AttributeCreate addOrderByItem(List orderByItem) {
    if (this.orderBy == null) {
      this.orderBy = new ArrayList<List>();
    }
    this.orderBy.add(orderByItem);
    return this;
  }

   /**
   * Get orderBy
   * @return orderBy
  **/
  @Schema(description = "")
  public List<List> getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(List<List> orderBy) {
    this.orderBy = orderBy;
  }

  public AttributeCreate expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @Schema(description = "")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public AttributeCreate nullable(Boolean nullable) {
    this.nullable = nullable;
    return this;
  }

   /**
   * Get nullable
   * @return nullable
  **/
  @Schema(description = "")
  public Boolean isNullable() {
    return nullable;
  }

  public void setNullable(Boolean nullable) {
    this.nullable = nullable;
  }

  public AttributeCreate auto(Boolean auto) {
    this.auto = auto;
    return this;
  }

   /**
   * Get auto
   * @return auto
  **/
  @Schema(description = "")
  public Boolean isAuto() {
    return auto;
  }

  public void setAuto(Boolean auto) {
    this.auto = auto;
  }

  public AttributeCreate visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @Schema(description = "")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public AttributeCreate label(I18nValue label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public I18nValue getLabel() {
    return label;
  }

  public void setLabel(I18nValue label) {
    this.label = label;
  }

  public AttributeCreate description(I18nValue description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public I18nValue getDescription() {
    return description;
  }

  public void setDescription(I18nValue description) {
    this.description = description;
  }

  public AttributeCreate aggregatable(Boolean aggregatable) {
    this.aggregatable = aggregatable;
    return this;
  }

   /**
   * Get aggregatable
   * @return aggregatable
  **/
  @Schema(description = "")
  public Boolean isAggregatable() {
    return aggregatable;
  }

  public void setAggregatable(Boolean aggregatable) {
    this.aggregatable = aggregatable;
  }

  public AttributeCreate enumOptions(List<String> enumOptions) {
    this.enumOptions = enumOptions;
    return this;
  }

  public AttributeCreate addEnumOptionsItem(String enumOptionsItem) {
    if (this.enumOptions == null) {
      this.enumOptions = new ArrayList<String>();
    }
    this.enumOptions.add(enumOptionsItem);
    return this;
  }

   /**
   * Get enumOptions
   * @return enumOptions
  **/
  @Schema(description = "")
  public List<String> getEnumOptions() {
    return enumOptions;
  }

  public void setEnumOptions(List<String> enumOptions) {
    this.enumOptions = enumOptions;
  }

  public AttributeCreate range(Range range) {
    this.range = range;
    return this;
  }

   /**
   * Get range
   * @return range
  **/
  @Schema(description = "")
  public Range getRange() {
    return range;
  }

  public void setRange(Range range) {
    this.range = range;
  }

  public AttributeCreate readonly(Boolean readonly) {
    this.readonly = readonly;
    return this;
  }

   /**
   * Get readonly
   * @return readonly
  **/
  @Schema(description = "")
  public Boolean isReadonly() {
    return readonly;
  }

  public void setReadonly(Boolean readonly) {
    this.readonly = readonly;
  }

  public AttributeCreate unique(Boolean unique) {
    this.unique = unique;
    return this;
  }

   /**
   * Get unique
   * @return unique
  **/
  @Schema(description = "")
  public Boolean isUnique() {
    return unique;
  }

  public void setUnique(Boolean unique) {
    this.unique = unique;
  }

  public AttributeCreate nullableExpression(String nullableExpression) {
    this.nullableExpression = nullableExpression;
    return this;
  }

   /**
   * Get nullableExpression
   * @return nullableExpression
  **/
  @Schema(description = "")
  public String getNullableExpression() {
    return nullableExpression;
  }

  public void setNullableExpression(String nullableExpression) {
    this.nullableExpression = nullableExpression;
  }

  public AttributeCreate visibleExpression(String visibleExpression) {
    this.visibleExpression = visibleExpression;
    return this;
  }

   /**
   * Get visibleExpression
   * @return visibleExpression
  **/
  @Schema(description = "")
  public String getVisibleExpression() {
    return visibleExpression;
  }

  public void setVisibleExpression(String visibleExpression) {
    this.visibleExpression = visibleExpression;
  }

  public AttributeCreate validationExpression(String validationExpression) {
    this.validationExpression = validationExpression;
    return this;
  }

   /**
   * Get validationExpression
   * @return validationExpression
  **/
  @Schema(description = "")
  public String getValidationExpression() {
    return validationExpression;
  }

  public void setValidationExpression(String validationExpression) {
    this.validationExpression = validationExpression;
  }

  public AttributeCreate defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @Schema(description = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public AttributeCreate sequenceNumber(Integer sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Get sequenceNumber
   * @return sequenceNumber
  **/
  @Schema(description = "")
  public Integer getSequenceNumber() {
    return sequenceNumber;
  }

  public void setSequenceNumber(Integer sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
  }

  public AttributeCreate idAttribute(Boolean idAttribute) {
    this.idAttribute = idAttribute;
    return this;
  }

   /**
   * Get idAttribute
   * @return idAttribute
  **/
  @Schema(description = "")
  public Boolean isIdAttribute() {
    return idAttribute;
  }

  public void setIdAttribute(Boolean idAttribute) {
    this.idAttribute = idAttribute;
  }

  public AttributeCreate labelAttribute(Boolean labelAttribute) {
    this.labelAttribute = labelAttribute;
    return this;
  }

   /**
   * Get labelAttribute
   * @return labelAttribute
  **/
  @Schema(description = "")
  public Boolean isLabelAttribute() {
    return labelAttribute;
  }

  public void setLabelAttribute(Boolean labelAttribute) {
    this.labelAttribute = labelAttribute;
  }

  public AttributeCreate lookupAttributeIndex(Integer lookupAttributeIndex) {
    this.lookupAttributeIndex = lookupAttributeIndex;
    return this;
  }

   /**
   * Get lookupAttributeIndex
   * @return lookupAttributeIndex
  **/
  @Schema(description = "")
  public Integer getLookupAttributeIndex() {
    return lookupAttributeIndex;
  }

  public void setLookupAttributeIndex(Integer lookupAttributeIndex) {
    this.lookupAttributeIndex = lookupAttributeIndex;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttributeCreate attributeCreate = (AttributeCreate) o;
    return Objects.equals(this.id, attributeCreate.id) &&
        Objects.equals(this.name, attributeCreate.name) &&
        Objects.equals(this.type, attributeCreate.type) &&
        Objects.equals(this.parent, attributeCreate.parent) &&
        Objects.equals(this.refEntityType, attributeCreate.refEntityType) &&
        Objects.equals(this.cascadeDelete, attributeCreate.cascadeDelete) &&
        Objects.equals(this.mappedByAttribute, attributeCreate.mappedByAttribute) &&
        Objects.equals(this.orderBy, attributeCreate.orderBy) &&
        Objects.equals(this.expression, attributeCreate.expression) &&
        Objects.equals(this.nullable, attributeCreate.nullable) &&
        Objects.equals(this.auto, attributeCreate.auto) &&
        Objects.equals(this.visible, attributeCreate.visible) &&
        Objects.equals(this.label, attributeCreate.label) &&
        Objects.equals(this.description, attributeCreate.description) &&
        Objects.equals(this.aggregatable, attributeCreate.aggregatable) &&
        Objects.equals(this.enumOptions, attributeCreate.enumOptions) &&
        Objects.equals(this.range, attributeCreate.range) &&
        Objects.equals(this.readonly, attributeCreate.readonly) &&
        Objects.equals(this.unique, attributeCreate.unique) &&
        Objects.equals(this.nullableExpression, attributeCreate.nullableExpression) &&
        Objects.equals(this.visibleExpression, attributeCreate.visibleExpression) &&
        Objects.equals(this.validationExpression, attributeCreate.validationExpression) &&
        Objects.equals(this.defaultValue, attributeCreate.defaultValue) &&
        Objects.equals(this.sequenceNumber, attributeCreate.sequenceNumber) &&
        Objects.equals(this.idAttribute, attributeCreate.idAttribute) &&
        Objects.equals(this.labelAttribute, attributeCreate.labelAttribute) &&
        Objects.equals(this.lookupAttributeIndex, attributeCreate.lookupAttributeIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, parent, refEntityType, cascadeDelete, mappedByAttribute, orderBy, expression, nullable, auto, visible, label, description, aggregatable, enumOptions, range, readonly, unique, nullableExpression, visibleExpression, validationExpression, defaultValue, sequenceNumber, idAttribute, labelAttribute, lookupAttributeIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttributeCreate {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    refEntityType: ").append(toIndentedString(refEntityType)).append("\n");
    sb.append("    cascadeDelete: ").append(toIndentedString(cascadeDelete)).append("\n");
    sb.append("    mappedByAttribute: ").append(toIndentedString(mappedByAttribute)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    nullable: ").append(toIndentedString(nullable)).append("\n");
    sb.append("    auto: ").append(toIndentedString(auto)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    aggregatable: ").append(toIndentedString(aggregatable)).append("\n");
    sb.append("    enumOptions: ").append(toIndentedString(enumOptions)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    readonly: ").append(toIndentedString(readonly)).append("\n");
    sb.append("    unique: ").append(toIndentedString(unique)).append("\n");
    sb.append("    nullableExpression: ").append(toIndentedString(nullableExpression)).append("\n");
    sb.append("    visibleExpression: ").append(toIndentedString(visibleExpression)).append("\n");
    sb.append("    validationExpression: ").append(toIndentedString(validationExpression)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    idAttribute: ").append(toIndentedString(idAttribute)).append("\n");
    sb.append("    labelAttribute: ").append(toIndentedString(labelAttribute)).append("\n");
    sb.append("    lookupAttributeIndex: ").append(toIndentedString(lookupAttributeIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

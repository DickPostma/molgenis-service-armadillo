/*
 * Metadata API
 * RESTful API to create/read/update/delete metadata.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * EntityTypeData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-14T15:06:09.233Z[GMT]")
public class EntityTypeData {
  @SerializedName("id")
  private String id = null;

  @SerializedName("package")
  private ModelPackage _package = null;

  @SerializedName("extends")
  private EntityType _extends = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("description_i18n")
  private I18nValue descriptionI18n = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("label_i18n")
  private I18nValue labelI18n = null;

  @SerializedName("abstract")
  private Boolean _abstract = null;

  @SerializedName("indexingDepth")
  private Integer indexingDepth = null;

  @SerializedName("attributes")
  private Attributes attributes = null;

  public EntityTypeData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public EntityTypeData _package(ModelPackage _package) {
    this._package = _package;
    return this;
  }

   /**
   * Get _package
   * @return _package
  **/
  @Schema(description = "")
  public ModelPackage getPackage() {
    return _package;
  }

  public void setPackage(ModelPackage _package) {
    this._package = _package;
  }

  public EntityTypeData _extends(EntityType _extends) {
    this._extends = _extends;
    return this;
  }

   /**
   * Get _extends
   * @return _extends
  **/
  @Schema(description = "")
  public EntityType getExtends() {
    return _extends;
  }

  public void setExtends(EntityType _extends) {
    this._extends = _extends;
  }

  public EntityTypeData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EntityTypeData descriptionI18n(I18nValue descriptionI18n) {
    this.descriptionI18n = descriptionI18n;
    return this;
  }

   /**
   * Get descriptionI18n
   * @return descriptionI18n
  **/
  @Schema(description = "")
  public I18nValue getDescriptionI18n() {
    return descriptionI18n;
  }

  public void setDescriptionI18n(I18nValue descriptionI18n) {
    this.descriptionI18n = descriptionI18n;
  }

  public EntityTypeData label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public EntityTypeData labelI18n(I18nValue labelI18n) {
    this.labelI18n = labelI18n;
    return this;
  }

   /**
   * Get labelI18n
   * @return labelI18n
  **/
  @Schema(description = "")
  public I18nValue getLabelI18n() {
    return labelI18n;
  }

  public void setLabelI18n(I18nValue labelI18n) {
    this.labelI18n = labelI18n;
  }

  public EntityTypeData _abstract(Boolean _abstract) {
    this._abstract = _abstract;
    return this;
  }

   /**
   * Get _abstract
   * @return _abstract
  **/
  @Schema(description = "")
  public Boolean isAbstract() {
    return _abstract;
  }

  public void setAbstract(Boolean _abstract) {
    this._abstract = _abstract;
  }

  public EntityTypeData indexingDepth(Integer indexingDepth) {
    this.indexingDepth = indexingDepth;
    return this;
  }

   /**
   * Get indexingDepth
   * @return indexingDepth
  **/
  @Schema(description = "")
  public Integer getIndexingDepth() {
    return indexingDepth;
  }

  public void setIndexingDepth(Integer indexingDepth) {
    this.indexingDepth = indexingDepth;
  }

  public EntityTypeData attributes(Attributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Attributes getAttributes() {
    return attributes;
  }

  public void setAttributes(Attributes attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityTypeData entityTypeData = (EntityTypeData) o;
    return Objects.equals(this.id, entityTypeData.id) &&
        Objects.equals(this._package, entityTypeData._package) &&
        Objects.equals(this._extends, entityTypeData._extends) &&
        Objects.equals(this.description, entityTypeData.description) &&
        Objects.equals(this.descriptionI18n, entityTypeData.descriptionI18n) &&
        Objects.equals(this.label, entityTypeData.label) &&
        Objects.equals(this.labelI18n, entityTypeData.labelI18n) &&
        Objects.equals(this._abstract, entityTypeData._abstract) &&
        Objects.equals(this.indexingDepth, entityTypeData.indexingDepth) &&
        Objects.equals(this.attributes, entityTypeData.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, _package, _extends, description, descriptionI18n, label, labelI18n, _abstract, indexingDepth, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityTypeData {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    _package: ").append(toIndentedString(_package)).append("\n");
    sb.append("    _extends: ").append(toIndentedString(_extends)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionI18n: ").append(toIndentedString(descriptionI18n)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    labelI18n: ").append(toIndentedString(labelI18n)).append("\n");
    sb.append("    _abstract: ").append(toIndentedString(_abstract)).append("\n");
    sb.append("    indexingDepth: ").append(toIndentedString(indexingDepth)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
